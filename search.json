[{"title":"HTML5学习笔记","url":"/2019/09/13/HTML5学习笔记/","content":"# HTML5\n\n## 概述\n\n### 文档类型设定\n\ndocument\n\n- HTML:\n- XHTML:\n- HTML5\n\n### 字符设定\n\n```HTML\n<meta http-equiv=\"charset\" content=\"utf-8\">：HTML与XHTML中建议这样去写\n<meta charset=\"utf-8\">：HTML5的标签中建议这样去写\n```\n\n## HTML5标签\n\n### 常用新标签\n\n- header：定义文档的页眉\n- nav：定义导航链接的部分\n- footer：定义文档或节的页脚\n- article：标签规定独立的自包含内容\n- section：定义文档中的节（section、区段）\n- aside：定义其所处内容之外的内容\n\n### 常用新属性\n\n\n| 属性             | 用法                                           | 含义                                        |\n| ---------------- | ---------------------------------------------- | ------------------------------------------- |\n| **placeholder**  | `<input type=\"text\" placeholder=\"请输入用户名\">` | 占位符提供可描述输入字段预期值的提示信息    |\n| **autofocus**    | `<input type=\"text\" autofocus>  `                | 规定当页面加载时 input 元素应该自动获得焦点 |\n| **multiple**     | `<input type=\"file\" multiple> `                  | 多文件上传                                  |\n| **autocomplete** |  `<input type=\"text\" autocomplete=\"off\">`        | 规定表单是否应该启用自动完成功能            |\n| **required**     | `<input type=\"text\" required>`                   | 必填项                                      |\n| **accesskey**    | `<input type=\"text\" accesskey=\"s\"> `             | 规定激活（使元素获得焦点）元素的快捷键      |\n\n### 新增的type属性值\n\n| 类型         | 使用示例                | 含义                 |\n| ------------ | ----------------------- | -------------------- |\n| **email**    | `<input type=\"email\">   ` | 输入邮箱格式         |\n| **tel**      | `<input type=\"tel\">     ` | 输入手机号码格式     |\n| **url**      | `<input type=\"url\">     ` | 输入url格式          |\n| **number**   | `<input type=\"number\">  ` | 输入数字格式         |\n| **search**   | `<input type=\"search\">  ` | 搜索框（体现语义化） |\n| **range**    | `<input type=\"range\">   ` | 自由拖动滑块         |\n| **time**     | `<input type=\"time\">    ` |                      |\n| **date**     | `<input type=\"date\">    ` |                      |\n| **datetime** | `<input type=\"datetime\">` |                      |\n| **month**    | `<input type=\"month\">   ` |                      |\n| **week**     | `<input type=\"week\">    ` |                      |\n\n### 综合案例\n\n`<form action=\"\">\n  <fieldset>\n    <legend>学生档案</legend>\n    <label for=\"userName\">姓名:</label>\n    <input type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"请输入用户名\"> <br>\n    <label for=\"userPhone\">手机号码:</label>\n    <input type=\"tel\" name=\"userPhone\" id=\"userPhone\" pattern=\"^1\\d{10}$\"><br>\n    <label for=\"email\">邮箱地址:</label>\n    <input type=\"email\" required name=\"email\" id=\"email\"><br>\n    <label for=\"collage\">所属学院:</label>\n    <input type=\"text\" name=\"collage\" id=\"collage\" list=\"cList\" placeholder=\"请选择\"><br>\n    <datalist id=\"cList\">\n      <option value=\"前端与移动开发学院\"></option>\n      <option value=\"java学院\"></option>\n      <option value=\"c++学院\"></option>\n    </datalist><br>\n    <label for=\"score\">入学成绩:</label>\n    <input type=\"number\" max=\"100\" min=\"0\" value=\"0\" id=\"score\"><br>\n    <label for=\"level\">基础水平:</label>\n    <meter id=\"level\" max=\"100\" min=\"0\" low=\"59\" high=\"90\"></meter><br>\n    <label for=\"inTime\">入学日期:</label>\n    <input type=\"date\" id=\"inTime\" name=\"inTime\"><br>\n    <label for=\"leaveTime\">毕业日期:</label>\n    <input type=\"date\" id=\"leaveTime\" name=\"leaveTime\"><br>\n    <input type=\"submit\">\n  </fieldset>\n</form>`\n\n### 多媒体标签\n\n- embed：标签定义嵌入的内容\n- audio：播放音频\n- video：播放视频\n\n#### 多媒体embed\n\nembed可以用来插入各种多媒体，格式可以是 Midi、Wav、AIFF、AU、MP3等等。url为音频或视频文件及其路径，可以是相对路径或绝对路径。\n\n因为兼容性问题，我们这里只讲解 插入网络视频， 后面H5会讲解 audio 和video 视频多媒体。 \n\n```HTML\n<embed src=\"http://player.youku.com/player.php/sid/XMTI4MzM2MDIwOA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"></embed>\n```\n\n#### 多媒体audio\n\nHTML5通过<audio>标签来解决音频播放的问题。\n\n使用相当简单，如下所示\n\n```HTML\n<!--通过src指定音频文件路径即可-->\n<audio src=\"1.mp3\"></audio>\n```\n\n并且可以通过附加属性可以更友好控制音频的播放，如：\n\nautoplay 自动播放\n\ncontrols 是否显不默认播放控件\n\nloop 循环播放\n\n由于版权等原因，不同的浏览器可支持播放的格式是不一样的，如下图供参考\n\n当前,audio元素支持三种音频格式:\n\n|            | IE9  | Firefox 3.5 | Opera 10.5 | Chrome 3.0 | Safari 3.0 |\n| ---------- | ---- | ----------- | ---------- | ---------- | ---------- |\n| Ogg Vorbis |      | √           | √          | √          |            |\n| MP3        | √    |             |            | √          | √          |\n| Wav        |      | √           | √          |            | √          |\n\n多浏览器支持方案,\n\n```HTML\n<audio controls>\n\t<!--通过src指定多格式音频文件-->\n    <audio src=\"1.mp3\"></audio>\n    <audio src=\"1.wav\"></audio>\n    <audio src=\"1.ogg\"></audio>\n    您的浏览器不支持HTML音频播放功能!\n</audio>\n```\n\n#### 多媒体video\n\n```HTML\nHTML5通过`<video>`标签来解决音频播放的问题。\n同音频播放一样，`<video>`使用也相当简单，如下所示\n<!--通过src指定音频文件路径即可-->\n<video src=\"1.mp4\" controls=\"controls\"></audio>\n```\n\n同样，通过附加属性可以更友好的控制视频的播放\n\nautoplay 自动播放\n\ncontrols 是否显示默认播放控件\n\nloop 循环播放\n\nwidth 设置播放窗口宽度\n\nheight 设置播放窗口的高度\n\n由于版权等原因，不同的浏览器可支持播放的格式是不一样的，如下供参考：\n\n当前,video元素支持三种视频格式:\n\n|       | IE   | Firefox 3.5 | Opera 10.5 | Chrome 3.0 | Safari 3.0 |\n| ----- | ---- | ----------- | ---------- | ---------- | ---------- |\n| Ogg   | No   | 3.5+        | 10.5+      | 5.0+       | No         |\n| MPEG4 | 9.0+ | No          | No         | 5.0+       | 3.0+       |\n| WebM  | No   | 4.0+        | 10.6+      | 6.0+       | No         |","tags":["前端"]},{"title":"HTML学习笔记","url":"/2019/09/10/HTML学习笔记/","content":"\n# web 概述\n\n## 常见浏览器简介\n\n```\n浏览器是网页运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。\n```\n\n## 浏览器内核\n\n```\n浏览器内核又可以分成两部分：渲染引擎(layout engineer 或者 Rendering Engine)和 JS 引擎。\n渲染引擎 它负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。\nJS 引擎 则是解析 Javascript 语言，执行 javascript语言来实现网页的动态效果。\n\n最开始渲染引擎和 JS 引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。有一个网页标准计划小组制作了一个 ACID 来测试引擎的兼容性和性能。内核的种类很多，如加上没什么人使用的非商业的免费内核，可能会有10多种，但是常见的浏览器内核可以分这四种：Trident、Gecko、Blink、Webkit。\n```\n\n（1）Trident(IE 内核)\n\n国内很多的双核浏览器的其中一核便是 Trident，美其名曰 \"兼容模式\"。\n\n代表： IE、傲游、世界之窗浏览器、Avant、腾讯 TT、猎豹安全浏览器、360 极速浏览器、百度浏览器等。\n\nWindow10 发布后，IE 将其内置浏览器命名为 Edge，Edge 最显著的特点就是新内核 EdgeHTML。\n\n（2）Gecko(firefox)\n\nGecko(Firefox 内核)： Mozilla FireFox(火狐浏览器) 采用该内核，Gecko 的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。 可惜这几年已经没落了， 比如 打开速度慢、升级频繁、猪一样的队友 flash、神一样的对手 chrome。\n\n（3） webkit(Safari)\n\nSafari 是苹果公司开发的浏览器，所用浏览器内核的名称是大名鼎鼎的 WebKit。\n\n现在很多人错误地把 webkit 叫做 chrome 内核（即使 chrome 内核已经是 blink 了），苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。\n\n代表浏览器：傲游浏览器 3、 Apple Safari (Win/Mac/iPhone/iPad)、Symbian 手机浏览器、Android 默认浏览器，\n\n（4） Chromium/Bink(chrome)\n\n在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。\n\n     大部分国产浏览器最新版都采用Blink内核。\n\n（5） Presto(Opera)\n\nPresto 是挪威产浏览器 opera 的 \"前任\" 内核，为何说是 \"前任\"，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。\n\n移动端的浏览器内核主要说的是系统内置浏览器的内核。\n\n目前移动设备浏览器上常用的内核有 Webkit，Blink，Trident，Gecko 等，其中 iPhone 和 iPad 等苹果 iOS 平台主要是 WebKit，Android 4.4 之前的 Android 系统浏览器内核是 WebKit，Android4.4 系统浏览器切换到了 Chromium，内核是 Webkit 的分支 Blink，Windows Phone 8 系统浏览器内核是 Trident。\n\n## 路径\n\n路径可以分为： 相对路径和绝对路径\n\n### 绝对路径\n\n“D:\\web\\img\\logo.gif”，或完整的网络地址，例如“http://www.github.com/images/logo.gif”。\n\n### 相对路径\n\n1. 图像文件和 HTML 文件位于同一文件夹：./（推荐）或者只需输入图像文件的名称即可，如<img src=\"./logo.gif\"> ; &lt;img src=\"logo.gif\" /&gt;。\n2. 图像文件位于 HTML 文件的下一级文件夹：输入文件夹名和文件名，之间用“/”隔开，如&lt;img src=\"img/img01/logo.gif\" /&gt;。\n3. 图像文件位于 HTML 文件的上一级文件夹：在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，如&lt;img src=\"../logo.gif\" /&gt;。\n\n# HTML\n\n## 概述\n\nHTML（英文 Hyper Text Markup Language 的缩写）中文译为“超文本标签语言”，主要是通过 HTML 标签对网页中的文本、图片、声音等内容进行描述。\n\n### 骨架\n\n```HTML\n<HTML>\n    <head>\n        <title></title>\n    </head>\n    <body>\n    </body>\n</HTML>\n1 HTML标签：\n\n作用所有HTML中标签的一个根节点。\n\n2 head标签：\n\n作用：用于存放：\n\ntitle,meta,base,style,script,link\n\n注意在head标签中我们必须要设置的标签是title\n\n3.title标签：\n\n作用：让页面拥有一个属于自己的标题。\n\n4.body标签：\n\n作用：页面在的主体部分，用于存放所有的HTML标签：\n\np,h,a,b,u,i,s,em,del,ins,strong,img\n```\n\n### HTML 标签分类\n\n单标签: 在 HTML 基础中，单标签就是由一个标签组成的。例如`<br>、<hr>、<img>、<input>、<param>、<meta>、<link>`。\n\n双标签: 而双标签则是由“开始标签”和“结束标签”两部分构成（这两部分是相同的）。例如`<html>、<head>、<title>、<body>、<table>、<tr>、<td>、<span>、<p>、<form>、<h1>、<h2>、<h3>、<h4>、<h5>、<h6>、<object>、<style>、<b>、<u>、<strong>、<i>、<div>、<a>、<script>、<center>`（双标签的一部分）。\n\n### HTML 标签关系\n\n标签的相互关系就分为两种：1.嵌套关系 2.并列关系\n\n### 开发工具\n\nWebStorm,VSCode,HBuilderX, Dreamweaver,Sublime\n\n### 文档类型<!DOCTYPE>\n\n这句话就是告诉我们使用哪个 html 版本？ 我们使用的是 html 5 的版本。 html 有很多版本，那我们应该告诉用户和浏览器我们使用的版本号。\n\n<!DOCTYPE> 标签位于文档的最前面，用于向浏览器说明当前文档使用哪种 HTML 或 XHTML 标准规范，必需在开头处使用<!DOCTYPE>标签为所有的XHTML文档指定XHTML版本和类型，只有这样浏览器才能按指定的文档类型进行解析。\n\n注意： 一些老网站可能用的还是老版本的文档类型比如 XHTML 之类的，但是我们学的是 HTML5,而且 HTML5 的文档类型兼容很好(向下兼容的原则)，所以大家放心的使用 HTML5 的文档类型就好了。\n\n### 字符集\n\n```HTML\n<meta charset=\"UTF-8\">\n```\n\nutf-8 是目前最常用的字符集编码方式，常用的字符集编码方式还有 gbk 和 gb2312。\n\ngb2312 简单中文 包括 6763 个汉字\n\nBIG5 繁体中文 港澳台等用\n\nGBK 包含全部中文字符 是 GB2312 的扩展，加入对繁体字的支持，兼容 GB2312\n\nUTF-8 则包含全世界所有国家需要用到的字符\n\n我们统统使用 UTF-8 字符集, 这样就避免出现字符集不统一而引起乱码的情况了。\n\n### HTML 标签的语义化\n\n所谓标签语义化，就是指通过 html 标签的内容可了解其含义。\n\nHTML 标签语义化的优点:\n\n1. 方便代码的阅读和维护\n\n2. 同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容\n\n3. 使用语义化标签会具有更好地搜索引擎优化\n\n核心：合适的地方给一个最为合理的标签。\n\n语义是否良好： 当我们去掉 CSS 之后，网页结构依然组织有序，并且有良好的可读性。\n\n不管是谁都能看懂这块内容是什么。\n\n遵循的原则：先确定语义的 HTML ，再选合适的 CSS。\n\n### 标签属性\n\n使用 HTML 制作网页时，如果想让 HTML 标签提供更多的信息，可以使用 HTML 标签的属性加以设置。其基本语法格式如下：\n\n```html\n<标签名 属性1=\"属性值1\" 属性2=\"属性值2\" …> 内容 </标签名>\n```\n\n在上面的语法中，\n\n1.标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。\n\n2.属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。\n\n3.任何标签的属性都有默认值，省略该属性则取默认值。\n\n采取 键值对 的格式 key=\"value\" 的格式\n\n## HTML 标签\n\n### 排版标签\n\n| 标签名   | 语义       | 格式            |\n| -------- | ---------- | --------------- |\n| 水平线   | horizontal | `<hr />`        |\n| 换行     | break      | `<break/>`      |\n| **div**  | division   | `<div> </div>`  |\n| **span** | /          | `<span></span>` |\n\n### 文本格式化标签\n\n\n| 标签名 | 语义化      | 格式                       | 备注              |\n| ------ | ----------- | -------------------------- | ----------------- |\n| 粗体   | bold/strong | `<b></b><strong></strong>` | XHTML 推荐 strong |\n| 斜体   | /           | `<i></i><em></em>`         | XHTML 推荐 em     |\n| 删除线 | /           | `<s></s><del></del>`       | XHTML 推荐 del    |\n| 下划线 | /           | `<u></u><ins></ins>`       | XHTM 不赞成使用 u |\n\n### 图像标签 img\n\n单词缩写： image 图像\n\nHTML 网页中任何元素的实现都要依靠 HTML 标签，要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img />以及和他相关的属性。其基本语法格式如下：\n\n该语法中 src 属性用于指定图像文件的路径和文件名，他是 img 标签的必需属性。\n\n```HTML\n<img src=\"图像URL\" />\n```\n\n`<img/>`标签属性 \n\n| 属性   | 属性值                          | 描述                     |\n| ------ | ------------------------------- | ------------------------ |\n| src    | URL                             | 图像的路径               |\n| alt    | 文本                            | 图像不能显示时的替换文本 |\n| title  | 文本                            | 鼠标悬停时显示的内容     |\n| width  | 像素（XHTML 不支持%页面百分比） | 设置图片的宽度           |\n| height | 像素（XHTML 不支持%页面百分比） | 设置图片的高度           |\n| border | 数字                            | 设置图像边框的宽度       |\n\n### 链接标签 a\n\n#### 基础\n\n单词缩写： anchor 的缩写 。基本解释 锚, 铁锚 的\n\n在 HTML 中创建超链接非常简单，只需用标签环绕需要被链接的对象即可，其基本语法格式如下：\n\n```HTML\n<a href=\"跳转目标\" target=\"目标窗口的弹出方式\">文本或图像</a>\n```\n\nhref：用于指定链接目标的 url 地址，当为标签应用 href 属性时，它就具有了超链接的功能。 Hypertext Reference 的缩写。意思是超文本引用\n\ntarget：用于指定链接页面的打开方式，其取值有\\_self 和\\_blank 两种，其中\\_self 为默认值，\\_blank 为在新窗口中打开方式。\n\n注意：\n\n1.外部链接 需要添加 http:// www.baidu.com\n\n2.内部链接 直接链接内部页面名称即可 比如 < a href=\"index.html\"> 首页 </a >\n\n3.如果当时没有确定链接目标时，通常将链接标签的 href 属性值定义为“#”(即 href=\"#\")，表示该链接暂时为一个空链接。\n\n4.不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。\n\n##### 防止页面跳转的方式\n\n```HTML\n1、<a href=\"#\" >test</a>；\n\n点击链接，页面默认上滚到页的顶部， 但可以加上 onclick=\"return false\"，防止上滚到页的顶部。\n\n2、<a href=\"####\" >test</a>；\n\n使用2个到4个#，见的大多是\"####\"，也有使用\"#all\"等其他的。一个无意义的标签指定，不做任何处理。\n\n3、<a href=\"javascript：void(0);\" >test</a>；\n<a href=\"javascript：;\" >test</a>；\n\njavascript:void(0) /javascript：;表示一个死链接，执行空事件。\n```\n\n#### 锚点定位\n\n通过创建锚点链接，用户能够快速定位到目标内容。\n创建锚点链接分为两步：\n\n```HTML\n1.使用“a href=”#id名>“链接文本\"</a>创建链接文本。\n\n2.使用相应的id名标注跳转目标的位置。\n```\n\n### base 标签\n\nbase 可以设置整体链接的打开状态 ，其取值有\\_self 和\\_blank 两种，其中\\_self 为默认值，\\_blank 为在新窗口中打开方式。\n\nbase 写到 <head> </head> 之间\n\n### 常用转义字符\n\n| 特殊字符 | 描述     | 字符的代码 |\n| -------- | -------- | ---------- |\n|          | 空格符   | `&nbsp;`   |\n| ＜       | 小于号   | `&lt;`     |\n| ＞       | 大于号   | `&gt;`     |\n| ＝       | 和号     | `&amp;`    |\n| ￥       | 人民币   | `&yen;`    |\n| ©        | 版权     | `&copy;`   |\n| ®        | 注册商标 | `&reg;`    |\n| °        | 摄氏度   | `&deg;`    |\n| ±        | 正负号   | `&plusmn;` |\n| ×        | 乘号     | `&times;`  |\n| ÷        | 除号     | `&divide;` |\n| ²        | 平方     | `&sup2;`   |\n| ³        | 立方     | `&sup3;`   |\n\n### 注释标签\n\n在 HTML 中还有一种特殊的标签——注释标签。如果需要在 HTML 文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。其基本语法格式如下：\n\n```HTML\n    <!-- 注释语句 -->\n```\n\n### 列表标签\n\n#### 无序列表 ol\n\n无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：\n\n```HTML\n<ul>\n  <li>列表项1</li>\n  <li>列表项2</li>\n  <li>列表项3</li>\n  ......\n</ul>\n```\n\n注意：\n\n```HTML\n 1. <ul></ul>中只能嵌套<li></li>，直接在<ul></ul>标签中输入其他标签或者文字的做法是不被允许的。\n 2. <li>与</li>之间相当于一个容器，可以容纳所有元素。\n 3. 无序列表会带有自己样式属性，可以让CSS来修改样式！\n```\n\n#### 有序列表 ol\n\n有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：\n\n```HTML\n<ol>\n  <li>列表项1</li>\n  <li>列表项2</li>\n  <li>列表项3</li>\n  ......\n</ol>\n```\n\n#### 自定义列表\n\n常用在网站底部设计,定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：\n\n```HTML\n<dl>\n  <dt>名词1</dt>\n  <dd>名词1解释1</dd>\n  <dd>名词1解释2</dd>\n  ...\n  <dt>名词2</dt>\n  <dd>名词2解释1</dd>\n  <dd>名词2解释2</dd>\n  ...\n</dl>\n```\n\n### 表格标签 table\n\n#### 表格结构\n\n在使用表格进行布局时，可以将表格划分为头部、主体和页脚（页脚因为有兼容性问题，我们不在赘述），具体 如下所示：\n\n```HTML\n<thead></thead>：用于定义表格的头部。\n\n必须位于<table></table> 标签中，一般包含网页的logo和导航等头部信息。\n\n\n<tbody></tbody>：用于定义表格的主体。\n\n位于<table></table>标签中，一般包含网页中除头部和底部之外的其他内容。\n```\n\n#### 基本语法\n\n在 HTML 网页中，要想创建表格，就需要使用表格相关的标签。创建表格的基本语法格式如下：\n\n```HTML\n<table>\n  <tr>\n    <td>单元格内的文字</td>\n    ...\n  </tr>\n  ...\n</table>\n```\n\n在上面的语法中包含三对 HTML 标签，分别为 &lt;table&gt;&lt;/table&gt;、&lt;tr&gt;&lt;/tr&gt;、&lt;td&gt;&lt;/td&gt;，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释。\n\n```HTML\n1.table用于定义一个表格。\n\n2.tr 用于定义表格中的一行，必须嵌套在 table /table标签中，在 table /table中包含几对 tr /tr，就有几行表格。\n\n3.td /td：用于定义表格中的单元格，必须嵌套在<tr></tr>标签中，一对 <tr> </tr>中包含几对<td></td>，就表示该行中有多少列（或多少个单元格）。\n```\n\n注意:\n\n```HTML\n1. <tr></tr>中只能嵌套<td></td>\n2. <td></td>标签，他就像一个容器，可以容纳所有的元素\n```\n\n#### 表格属性\n\n| 属性名      | 含义                                     | 常用属性值          |\n| ----------- | ---------------------------------------- | ------------------- |\n| border      | 设置表格的边框(默认 border=\"0\"无边框)    | 像素值              |\n| cellspacing | 设置单元格与单元格之间的空白间距         | 像素值(默认为 2px)  |\n| callpadding | 设置单元格内容与单元格边框之间的空白间距 | 像素值(默认为 1px)  |\n| width       | 设置表格的宽度                           | 像素值              |\n| height      | 设置表格的高度                           | 像素值              |\n| align       | 设置表格在网页中的水平对齐方式           | left、center、right |\n\n#### 表头标签\n\n表头一般位于表格的第一行或第一列，其文本加粗居中，如下图所示，即为设置了表头的表格。设置表头非常简单，只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。\n\n#### 合并单元格\n\n跨行合并：rowspan 跨列合并：colspan\n\n### 表单标签 input\n\n在 HTML 中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域 3 个部分构成。\n\n表单控件：\n\n       包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。\n\n提示信息：\n\n        一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。\n\n表单域：\n\n      他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。\n\n#### input 属性\n\n<table>\n\t<tr>\n\t    <th>属性</th>\n\t    <th>属性值</th>\n\t    <th>描述</th>  \n\t</tr >\n\t<tr >\n\t    <td rowspan=\"9\">type</td>\n\t    <td>text</td>\n\t    <td>单行文本输入框</td>\n\t</tr>\n\t<tr>\n\t    <td>password</td>\n\t    <td>密码输入框</td>\n\t</tr>\n\t<tr>\n\t    <td>radio</td>\n\t    <td>单选按钮</td>\n\t</tr>\n\t<tr>\n\t    <td>CheckBox</td>\n\t    <td>复选按钮</td>\n\t</tr>\n\t<tr><td>button</td>\n\t    <td>普通按钮</td>\n\t</tr>\n\t<tr>\n\t    <td>submit</td>\n\t    <td>提交按钮</td>\n\t</tr>\n\t<tr>\n\t    <td>reset</td>\n\t    <td>重置按钮</td>\n\t</tr>\n\t<tr>\n\t    <td>image</td>\n\t    <td>图像形式的提交按钮</td>\n\t</tr>\n\t<tr>\n\t    <td >file</td>\n\t    <td>文件域</td>\n\t</tr>\n\t<tr>\n\t    <td >name</td>\n\t    <td>用户自定义</td>\n\t    <td>控件名称</td>\n\t</tr>\n\t<tr>\n\t    <td >value</td>\n\t    <td >用户自定义</td>\n\t    <td >默认文本值</td>\n\t</tr>\n\t<tr>\n\t    <td >size</td>\n\t    <td >正整数</td>\n\t    <td >控件在页面中的显示宽度</td>\n\t</tr>\n\t<tr>\n\t    <td >checked</td>\n\t    <td >checked</td>\n\t    <td >定义选择控件默认被选中项</td>\n\t</tr>\n\t<tr>\n\t    <td >maxlength</td>\n\t    <td >正整数</td>\n\t    <td >控件允许输入的最多字符</td>\n\t</tr>\n</table>\n\n#### 标签 label\n\nlabel 标签为 input 元素定义标注（标签）。\n\n作用： 用于绑定一个表单元素, 当点击 label 标签的时候, 被绑定的表单元素就会获得输入焦点\n\n如何绑定元素呢？\n\nfor 属性规定 label 与哪个表单元素绑定。\n\n```HTML\n<label for=\"male\">Male</label>\n<input type=\"radio\" name=\"sex\" id=\"male\" value=\"male\">\n```\n\n#### 文本域 textarea\n\n如果需要输入大量的信息，就需要用到&lt;textarea&gt;&lt;/textarea&gt;标签。通过 textarea 控件可以轻松地创建多行文本输入框，其基本语法格式如下：\n\n```HTML\n<textarea cols=\"每行中的字符数\" rows=\"显示的行数\">\n  文本内容\n</textarea>\n```\n\n#### 下拉菜单 select\n\n使用 select 控件定义下拉菜单的基本语法格式如下:\n\n```HTML\n<select>\n  <option>选项1</option>\n  <option>选项2</option>\n  <option>选项3</option>\n  ...\n</select>\n```\n\n注意：\n\n1. &lt;select&gt;</select&gt;中至少应包含一对&lt;option></option&gt;。\n2. 在 option 中定义 selected =\" selected \"时，当前项即为默认选中项。\n\n#### 表单域\n\n在 HTML 中，form 标签被用于定义表单域，即创建一个表单，以实现用户信息的收集和传递，form 中的所有内容都会被提交给服务器。创建表单的基本语法格式如下：\n\n```HTML\n<form action=\"url地址\" method=\"提交方式\" name=\"表单名称\">\n  各种表单控件\n</form>\n```\n\n常用属性：\n\n1. Action\n   在表单收集到信息后，需要将信息传递给服务器进行处理，action 属性用于指定接收并处理表单数据的服务器程序的 url 地址。\n2. method\n   用于设置表单数据的提交方式，其取值为 get 或 post。\n3. name\n   用于指定表单的名称，以区分同一个页面中的多个表单。\n\n注意： 每个表单都应该有自己表单域。\n","tags":["前端"]}]